# Task ID: 44
# Title: Generate Compelling AI Journal Summaries
# Status: done
# Dependencies: None
# Priority: high
# Description: Transform journal summary generation from basic statistics into compelling narrative-driven content using comprehensive data extraction (photos, locations, timeline, calendar) and intelligent narrative generation with user edit protection
# Details:
PRIORITY: Data extraction first. Extract rich data from photos (object detection, geocoding), locations (distance, place names), timeline events, and enabled calendar events. Then build narrative generation using this data. Implement critical user edit protection to prevent accidental content loss. Current boring output like 'visited 3 places, took 2 photos' becomes rich narratives: 'This morning at Harbor Roast Coffee during your 9am meeting, then walked 2.3km through Golden Gate Park capturing golden retrievers chasing frisbees, made it to yoga at Sunset Studio by 5:30pm'

# Test Strategy:
Test data extraction accuracy (object detection, geocoding, distance calc). Verify edit protection prevents data loss (100% success rate). Test narrative quality with timeline integration (80%+ events), calendar integration (100% enabled events), place names (3+ per day), object mentions (2+ per photo). Validate UI shows data availability and regenerates in <3s.

# Subtasks:
## 1. Enhanced Photo Data Extraction [done]
### Dependencies: None
### Description: Extract rich descriptive data from photos: object detection, photo geocoding, enhanced metadata to feed narrative generation
### Details:
Implement PhotoObjectDetector using google_mlkit_object_detection for object labels. Build PhotoGeocoder to extract EXIF GPS and reverse geocode to human-readable place names (Harbor Roast Coffee vs coordinates). Create EnhancedPhotoContext with objectLabels, location, placeName, objectConfidence. Store enhanced metadata in database.

## 2. Location and Distance Data Integration [done]
### Dependencies: None
### Description: Calculate and expose geographic data: distance traveled, location cluster naming, movement patterns for narrative
### Details:
Build DistanceCalculator to compute total km from location points. Create LocationClusterNamer using reverse geocoding for place names. Enhance LocationSummary with placeNames map, totalKilometers, detailed movement modes. Format distances human-readable (2.3km not 2300m).

## 3. Timeline and Calendar Integration [done]
### Dependencies: None
### Description: Integrate timeline events and calendar data (only enabled calendars) into narrative structure
### Details:
Create TimelineEventAggregator to merge JournalActivity timeline with CalendarEventData filtered by enabledCalendarIds. Build NarrativeEvent structure with type, timestamp, calendar-specific (meetingTitle, attendees), location-specific (placeName, duration), photo-specific (objectsSeen, sceneDescription). Modify DailyContextSynthesizer to pass enabledCalendarIds through.

## 4. User Edit Protection System [done]
### Dependencies: None
### Description: Prevent accidental loss of user-edited content on regeneration with warning dialog and merge options
### Details:
Build SummaryEditTracker using content hashing to detect modifications. Create RegenerationWarningDialog with 3 actions: Cancel, Add to my edits (append), Replace everything. Update JournalEntries schema with originalAiSummary and summaryWasEdited columns. Implement safe regeneration flow with hasUserEdits check before any regeneration.

## 5. Enhanced Narrative Template Engine [done]
### Dependencies: 44.1, 44.2, 44.3
### Description: Create rich contextual narrative templates using ALL available data (photos, locations, timeline, calendar, distance)
### Details:
Build DataRichNarrativeBuilder that weaves timeline events, place names, objects detected, calendar events, and distances into chronological narrative. Create ContextualPhraseGenerator for transitions based on distance/time. Implement event-specific descriptions for calendar (with attendees, place), photos (with objects, scene, place), locations (with dwell time, activity). Generate opening with time/location context, closing with day summary stats.

## 6. Personality and Emotional Intelligence [done]
### Dependencies: 44.1, 44.2, 44.3
### Description: Add emotional depth and personality using enriched data from photos, places, calendar, and movement
### Details:
Create EmotionalToneAnalyzer enhanced with richer data: object types (dogs=joy), place types (coffee shop=calm, gym=energetic), meeting titles (review=stress), distance (15km=adventurous, 0.5km=sedentary). Build PersonalityEngine for tone-aware phrasing. Implement EmotionalProfile with energy, social, contemplative, adventurous dimensions.

## 7. Summary Regeneration UI with Style Options [done]
### Dependencies: 44.4, 44.5, 44.6
### Description: Build UI for regeneration with edit protection, style picker, and data availability preview
### Details:
Add regeneration button to SummaryWidget that calls _handleRegenerationRequest with edit protection. Create StylePickerSheet with 5 styles (reflective, casual, poetic, concise, detailed) and DataInclusionCard showing what data will be included (timeline events count, locations, distance, photos, calendar events). Integrate with SummaryEditTracker to show warning when needed.

