# Task ID: 41
# Title: Implement Daily Canvas Quick Add Features - Photo Capture, Voice Recording, and Location Tagging
# Status: in-progress
# Dependencies: 3, 27, 15
# Priority: medium
# Description: Complete the three TODO items in daily_canvas_screen.dart at lines 740, 749, and 758 by implementing photo capture functionality using existing MediaPickerService, voice recording capabilities, and location tagging integration with the persistent location service.
# Details:
Implement the missing functionality for the three Quick Add buttons in the Daily Canvas screen: 1) **Photo Capture (line 740)**: Integrate with the existing MediaPickerService to show media picker options (camera, gallery) when the Photo button is tapped. Use the mediaPickerServiceProvider to access the service and call showMediaPickerOptions() to present the bottom sheet with camera and gallery options. Handle the returned file path and integrate with the media database through the service's built-in processing. 2) **Voice Recording (line 749)**: Although the VoiceEditingService currently uses stub implementations (speech packages disabled for APK size), implement a basic voice recording UI flow that shows a recording dialog with start/stop functionality. Create a simple recording interface that can be enhanced later when speech packages are re-enabled. Use permission_handler for microphone permissions and just_audio package for basic audio recording capabilities that are already included in pubspec.yaml. 3) **Location Tagging (line 758)**: Integrate with the existing PersistentLocationService and location database to capture the current location and add it as a location tag for the current journal entry. Use the geolocator package (already included) to get current position, integrate with the location database to store the location point, and provide user feedback about the location being tagged. All three implementations should integrate with the existing journal system through JournalService and provide appropriate user feedback via fluttertoast for success/error states.

# Test Strategy:
Test photo capture by tapping the Photo button and verifying the media picker bottom sheet appears with camera and gallery options. Test camera capture creates a new photo that gets stored in the media database and can be viewed in the MediaGalleryWidget. Test gallery selection allows picking existing photos. Test voice recording by tapping the Voice button and verifying a recording dialog appears with start/stop controls and proper permission handling. Test location tagging by tapping the Location button and verifying current location is captured, stored in the location database, and associated with the current journal entry. Verify appropriate toast messages are shown for success and error states for all three features. Test error scenarios including denied permissions, failed media capture, location services disabled, and network connectivity issues.
