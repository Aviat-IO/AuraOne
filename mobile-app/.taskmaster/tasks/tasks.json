{
  "master": [
    {
      "id": "4",
      "title": "Advanced Pattern Recognition System",
      "description": "Implement seasonal, weekly, and habit pattern detection with anomaly identification - 100% on-device",
      "status": "pending",
      "priority": "high",
      "dependencies": [],
      "details": "Build comprehensive pattern recognition using statistical analysis and time-series algorithms. Include seasonal pattern detection, weekly routine optimization, habit formation tracking, and anomaly detection for unusual days. Use 90-day rolling window in SQLite.",
      "testStrategy": "Test pattern detection accuracy with synthetic and real data. Verify seasonal detection across different time periods. Test anomaly detection with edge cases.",
      "subtasks": []
    },
    {
      "id": "5",
      "title": "Enhanced Emotional Intelligence System",
      "description": "Develop stress recognition, energy tracking, mood prediction, and burnout prevention - all on-device",
      "status": "pending",
      "priority": "high",
      "dependencies": ["4"],
      "details": "Create emotional intelligence features using on-device heuristics. Analyze accelerometer variance for stress, track activity levels for energy patterns, use historical data for mood prediction, and create burnout prevention alerts based on personal baselines.",
      "testStrategy": "Test stress detection with various activity patterns. Verify energy level calculations. Test mood prediction accuracy against user feedback.",
      "subtasks": []
    },
    {
      "id": "6",
      "title": "Health & Wellness Integration",
      "description": "Integrate with HealthKit/Google Fit for sleep, add nutrition tracking, exercise suggestions, and appointment reminders",
      "status": "pending",
      "priority": "high",
      "dependencies": ["5"],
      "details": "Use Flutter health package to integrate with platform health APIs. Create local nutrition database, personalized exercise recommendations based on patterns, and medical appointment reminder system. All processing on-device.",
      "testStrategy": "Test health API integration on both iOS and Android. Verify nutrition database queries. Test exercise recommendations for various fitness levels.",
      "subtasks": []
    },
    {
      "id": "7",
      "title": "Advanced Location Intelligence",
      "description": "Add reverse geocoding, route tracking, activity duration per location, and location insights",
      "status": "pending",
      "priority": "medium",
      "dependencies": ["4"],
      "details": "Implement offline reverse geocoding using local OpenStreetMap data. Add route visualization with flutter_map, track time spent at locations, and generate location-based recommendations. All geocoding must work offline.",
      "testStrategy": "Test offline geocoding accuracy. Verify route tracking and visualization. Test location duration calculations.",
      "subtasks": []
    },
    {
      "id": "8",
      "title": "Deeper Personalization Engine",
      "description": "Learn communication preferences, adaptive timing, goal integration, and custom wellness metrics",
      "status": "pending",
      "priority": "medium",
      "dependencies": ["4", "5"],
      "details": "Track user interaction patterns to learn preferences. Implement adaptive recommendation timing, personal goal system with progress tracking, and customizable wellness dashboard. Store sensitive data in flutter_secure_storage.",
      "testStrategy": "Test preference learning algorithms. Verify adaptive timing accuracy. Test goal tracking and custom metrics.",
      "subtasks": []
    },
    {
      "id": "9",
      "title": "Social & Calendar Intelligence",
      "description": "Detect social interactions, integrate calendar context, and build relationship tracking",
      "status": "pending",
      "priority": "low",
      "dependencies": ["6"],
      "details": "Use ML Kit face detection for social metrics. Integrate device_calendar for context-aware insights. Create social wellness scoring and relationship frequency tracking. All processing local only.",
      "testStrategy": "Test social detection accuracy. Verify calendar integration permissions. Test relationship tracking algorithms.",
      "subtasks": []
    },
    {
      "id": "10",
      "title": "Advanced Activity & Fitness Tracking",
      "description": "Add calorie estimation, workout detection, fitness progress tracking, and personalized recommendations",
      "status": "pending",
      "priority": "low",
      "dependencies": ["6"],
      "details": "Implement MET calculations for calorie estimation. Detect workouts from accelerometer patterns. Track fitness improvements over time and generate personalized recommendations. Use only on-device formulas.",
      "testStrategy": "Test calorie calculation accuracy. Verify workout detection for different exercise types. Test fitness trend analysis.",
      "subtasks": []
    }
  ]
}